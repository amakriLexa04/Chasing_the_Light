#textdomain wesnoth-chasing_the_light

[lua]
    code= <<
	
    function daeola_ranged_spell(radius, image, allied_only, ignore_caster, event_spell, experience_cancel)
    local unit_id = "daeola"
    local selected_target_units = {}
	
	wesnoth.interface.allow_end_turn(false)

    wesnoth.set_variable("no_spellcasting_event_d", 'dummy')
    wesnoth.set_variable("no_spellcasting_event", 'dummy')

    local unit_to_modify = wesnoth.get_units({ id = unit_id })[1]

    local unit_to_modify_attacks = unit_to_modify.attacks_left
    local unit_to_modify_moves = unit_to_modify.moves
	local unit_to_modify_x = unit_to_modify.x
    local unit_to_modify_y = unit_to_modify.y
	wesnoth.set_variable("unit_to_modify_x", unit_to_modify_x)
    wesnoth.set_variable("unit_to_modify_y", unit_to_modify_y)

    unit_to_modify.attacks_left = 0
    unit_to_modify.moves = 0

    local function place_image(x, y)
        wesnoth.wml_actions.item({
            x = x,
            y = y,
            image = image
			--halo= image
        })
    end

    local function remove_image()
        wesnoth.wml_actions.remove_item({
            image = image
			--halo= image
        })
    end

    local function is_allied(unit, side)
        return wesnoth.sides[unit.side].team_name == wesnoth.sides[side].team_name
    end

    local x, y = unit_to_modify.x, unit_to_modify.y
    for xx = x - radius, x + radius do
        for yy = y - radius, y + radius do
            if wesnoth.map.distance_between(x, y, xx, yy) <= radius then
                local target_units = wesnoth.get_units { x = xx, y = yy }
                if #target_units > 0 then
                    local target_unit = target_units[1]
                    if (allied_only == "all" or (allied_only == true and is_allied(target_unit, unit_to_modify.side)) or (allied_only == false and not is_allied(target_unit, unit_to_modify.side))) and (not ignore_caster or target_unit.id ~= unit_id) then
                        place_image(xx, yy)
                        table.insert(selected_target_units, {x = xx, y = yy})
                    end
                end
            end
        end
    end

    local function on_click_event()
        local clicked_x, clicked_y = wesnoth.interface.get_hovered_hex()
        for _, target_unit in ipairs(selected_target_units) do
            if (clicked_x == target_unit.x and clicked_y == target_unit.y) then
			    wesnoth.set_variable("unit_to_cast_on_x", clicked_x)
				wesnoth.set_variable("unit_to_cast_on_y", clicked_y)
                wesnoth.message("Info", "Cast spell!")
                remove_image()
                wesnoth.fire("redraw")
                wesnoth.game_events.on_mouse_button = nil
				
				wesnoth.set_variable("distance_between_units", wesnoth.map.distance_between(unit_to_modify.x, unit_to_modify.y, clicked_x, clicked_y)*72)
				
                wesnoth.fire_event(event_spell)
				
				unit_to_modify.attacks_left = unit_to_modify_attacks
                unit_to_modify.moves = unit_to_modify_moves - 1

                wesnoth.set_variable("no_spellcasting_event_d", nil)
                wesnoth.set_variable("no_spellcasting_event", nil)

                wesnoth.set_variable("unit_to_modify_attacks", nil)
                wesnoth.set_variable("unit_to_modify_moves", nil)
				wesnoth.set_variable("unit_to_modify_x", nil)
				wesnoth.set_variable("unit_to_modify_y", nil)
				
				wesnoth.interface.allow_end_turn(true)

                wesnoth.select_unit()
                return
            end
        end
        wesnoth.message("Info", "Cancel spell!")
        remove_image()
        wesnoth.fire("redraw")
        wesnoth.game_events.on_mouse_button = nil
		
		unit_to_modify.attacks_left = unit_to_modify_attacks
        unit_to_modify.moves = unit_to_modify_moves
		unit_to_modify.experience = unit_to_modify.experience + experience_cancel

        wesnoth.set_variable("no_spellcasting_event_d", nil)
        wesnoth.set_variable("no_spellcasting_event", nil)
        wesnoth.set_variable("spellcasted_this_turn_d", nil)

        wesnoth.set_variable("unit_to_modify_attacks", nil)
        wesnoth.set_variable("unit_to_modify_moves", nil)
		wesnoth.set_variable("unit_to_modify_x", nil)
		wesnoth.set_variable("unit_to_modify_y", nil)
		
		wesnoth.interface.allow_end_turn(true)

        wesnoth.select_unit()
    end

    wesnoth.game_events.on_mouse_button = function(screen_x, screen_y, button, pressed)
    if (pressed and button == "left") then
        on_click_event()
    end
end
end
    
    >>
[/lua]

#######################################################################################################################################################
#----------------------------------------------------------------- "PRIVATE" MACROS -------------------------------------------------------------------
#######################################################################################################################################################
#                                                                   GROUP 0 SKILLS
#######################################################################################################################################################

#############################
# MAGIC MISSILE
#############################
#define EVENT_MAGIC_MISSILE_D
    [event]
        name=refresh_daeola_skills
        first_time_only=no
        {FILTER_CONDITION({VARIABLE_CONDITIONAL skill_magic_missile_d equals yes})}
        [object]
            id,take_only_once=skill_magic_missile_d,no {FILTER id=daeola}
            {EFFECT new_attack (
                name,description,icon=missile,_"missile",attacks/magic-missile.png
                range,type,damage,number=ranged,fire,7,3
                [specials]
                    {WEAPON_SPECIAL_MAGICAL}
                [/specials] )}
            [/object]
        [/event]
#enddef
#define ANIMATIONS_MAGIC_MISSILE_D PATH
    [attack_anim]
        {FILTER_ATTACK name=missile}
        offset=0
        {MAGIC_MISSILE 11 -20}
        {MAGIC_MISSILE_STAFF_FLARE -750 600 11 -20}
        start_time=-800
        {FRAME image={PATH}/daeola.png:[100,700,200]}
        {SOUND:HIT_AND_MISS magic-missile-[1~3].ogg magic-missile-[1~3]-miss.ogg -350}
    [/attack_anim]
#enddef

#######################################################################################################################################################
#                                                                   GROUP 1 SKILLS
#######################################################################################################################################################

#############################
# LEVITATE
#############################
#define EVENT_LEVITATE_D
    [event]
        name=skill_levitate_d
        first_time_only=no
        {ANIMATE_UNIT id=daeola skill_levitate_d}
        [modify_unit]
            {FILTER id=daeola}
            [object]
                duration,id=turn,skill_levitate_d
                {EFFECT new_ability ([abilities]
                [skirmisher]
                    id,affect_self=skirmisher,yes
                [/skirmisher]
            [/abilities])}
            {EFFECT defense (replace=yes
            [defense]
                {FLY_DEFENSE -50} # 50% hit-chance on all terrain
            [/defense])}
            {EFFECT movement_costs (replace=yes
            [movement_costs]
                {FLY_MOVE} # fast movement on most terrains
            [/movement_costs])}
        [/object]
    [/modify_unit]

    # kill daeola if she was levitating over unwalkable terrain, and is now unable to move
    [event]
        name=side 1 turn refresh,skill_levitate_d_cancel
        {REMOVE_OBJECT skill_levitate_d id=daeola}
        [if] {HAVE_UNIT (id,defense=daeola,100)} {THEN(
            [message]
                speaker=daeola
                message=_"My levitate spell has ended over impassable terrain! I‘m falling to my death!"
            [/message]
            {KILL id=daeola ANIMATE=yes}
            [endlevel]
                result=defeat
            [/endlevel]
        )} [/if]
    [/event]
[/event]
[event]
    name=refresh_daeola_skills
    first_time_only=no
    {FILTER_CONDITION({VARIABLE_CONDITIONAL skill_levitate_d not_equals yes})}
    {FIRE_EVENT skill_levitate_d_cancel}
[/event]
#enddef
#define ANIMATIONS_LEVITATE_D PATH
    [animation]
        apply_to=skill_levitate_d
        {SOUND_FRAME sound=skill-levitate.wav}
        {FRAME image={PATH}/daeola.png:[50,300,50]}
        {FRAME submerge,image=0.01,"{PATH}/daeola-shadow.png~BLIT({PATH}/daeola-noshadow.png~RC(magenta>red),0,-[1,2,3,4]):[100,150,200,250]"}
        {OVERLAY_FRAME halo=halo/saurian-magic-halo-[1~7].png:75}
    [/animation]
    [standing_anim]
        {FILTER_OBJECT_ID skill_levitate_d}
        {FRAME submerge,image=0.01,"{PATH}/daeola-shadow.png~BLIT({PATH}/daeola-noshadow.png~RC(magenta>red),0,-[4~1,2~8,8~5,5,5~8,8~5]):350"}
    [/standing_anim]
    [movement_anim]
        {FILTER_OBJECT_ID skill_levitate_d}
        {FRAME submerge,image=0.01,"{PATH}/daeola-shadow.png~BLIT({PATH}/daeola-noshadow.png~RC(magenta>red),0,-4):200"}
    [/movement_anim]
#enddef

#############################
# SWAP
#############################
#define EVENT_SWAP_D

    [event]
        name=skill_swap_d_cast
        first_time_only=no

        ##adding swap immmunity
        [if]
            [have_unit]
                x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                [not]
                    type=utility_unit
                [/not]
            [/have_unit]
            [then]
                [animate_unit]
                    flag=pre_teleport
                    [filter]
                        id=daeola
                    [/filter]
                [/animate_unit]

                [put_to_recall_list]
                    id=daeola
                [/put_to_recall_list]
                [redraw][/redraw]

                [teleport]
                    [filter]
                        x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                    [/filter]
                    x,y=$unit_to_modify_x, $unit_to_modify_y
                    animate=yes
                [/teleport]

                [recall]
                    id=daeola
                    x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                    show=no
                [/recall]

                [animate_unit]
                    flag=post_teleport
                    [filter]
                        id=daeola
                    [/filter]
                [/animate_unit]
                [redraw][/redraw]

                {FIRE_EVENT swap_trial_achievement}
            [/then]
            [else]
                [lua]
                    code= <<
			    local unit_to_modify = wesnoth.get_units({ id = "daeola" })[1]
		        unit_to_modify.experience = unit_to_modify.experience + 8
                wesnoth.set_variable("spellcasted_this_turn_d", nil)
		    >>
                [/lua]
            [/else][/if]
        [/event]

        [event]
            name=skill_swap_d
            first_time_only=no

            {VARIABLE TARGET_IMAGE "misc/swap.png"}

            [lua]
                code= <<
			daeola_ranged_spell(4, wesnoth.get_variable("TARGET_IMAGE"), 'all', true, 'skill_swap_d_cast' , 8)

            wesnoth.interface.delay(300)
            wesnoth.select_unit()
	        wesnoth.deselect_hex()
            wesnoth.fire("redraw")
		>>
            [/lua]
        [/event]
#enddef

#############################
# DIS_HEAL
#############################
#define EVENT_DISHEAL_D

    [event]
        name=skill_disheal_d_cast
        first_time_only=no

        [if]
            [not]
                [variable]
                    name="unit_to_cast_on_x"
                    equals=$unit_to_modify_x
                [/variable]
                [and]
                    [variable]
                        name="unit_to_cast_on_y"
                        equals=$unit_to_modify_y
                    [/variable]
                [/and]
                [and]
                    [have_unit]
                        id=temple_guard_1
                    [/have_unit]
                [/and]
            [/not]
            [then]
                [animate_unit]
                    flag=healing
                    [filter]
                        id=daeola
                    [/filter]
                [/animate_unit]

                [animate_unit]
                    flag=levelin
                    [filter]
                        x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                    [/filter]
                [/animate_unit]

                [heal_unit]
                    [filter]
                        x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                    [/filter]
                    amount=8
                    animate=yes
                [/heal_unit]

                [if]
                    [variable]
                        name="is_daeola_healed_exam_mage"
                        equals=false
                    [/variable]
                    [then]
                        {FIRE_EVENT heal_exam_mage}
                    [/then][/if]
                [/then]
                [else]
                    [message]
                        speaker=daeola
                        message= _ "Ні, я не можу вилікувати себе закляттям, тільки не зараз! Я не відмовлюся від своєї обіцянки — я носитиму свій шрам, поки не стану справжнім магом!"
                    [/message]

                    [set_achievement]
                        content_for=wesnoth-Chasing_the_Light
                        id="ctl_selfheal"
                    [/set_achievement]
                [/else][/if]
            [/event]

            [event]
                name=skill_disheal_d
                first_time_only=no

                {VARIABLE TARGET_IMAGE "misc/buff.png"}

                [lua]
                    code= <<
			daeola_ranged_spell(8, wesnoth.get_variable("TARGET_IMAGE"), true, false, 'skill_disheal_d_cast' , 8)

            wesnoth.interface.delay(300)
            wesnoth.select_unit()
	        wesnoth.deselect_hex()
            wesnoth.fire("redraw")
		>>
                [/lua]
            [/event]
#enddef

#############################
# DIS_ATTACK
#############################
#define EVENT_DISATTACK_D

    [event]
        name=skill_disattack_d_cast
        first_time_only=no

        ##[message]
        ##    speaker=narrator
        ##    message= _ "The distance between units is $distance_between_units."
        ##[/message]

        [set_variable]
            name=repeat_count
            value=3
        [/set_variable]

        [while]
            [variable]
                name=repeat_count
                greater_than=0
            [/variable]
            [and]
                [have_unit]
                    x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                [/have_unit]
            [/and]

            [do]
                [set_variable]
                    name=miss_or_hit_disattack
                    value=9
                [/set_variable]

                {RANDOM 1..100}
                [if]
                    [variable]
                        name="random"
                        less_than=70
                    [/variable]
                    [then]
                        [set_variable]
                            name=miss_or_hit_disattack
                            value=9
                        [/set_variable]
                        [sound]
                            name= {SOUND_LIST:HOLY}
                            start_time=0
                        [/sound]
                    [/then]
                    [else]
                        [set_variable]
                            name=miss_or_hit_disattack
                            value=0
                        [/set_variable]
                        [sound]
                            name={SOUND_LIST:HOLY_MISS}
                            start_time=0
                        [/sound]
                    [/else][/if]

                    [animate_unit]
                        flag=disattack_anim
                        [filter]
                            id=daeola
                        [/filter]

                        [facing]
                            x,y=$unit_to_cast_on_x,$unit_to_cast_on_y
                        [/facing]
                    [/animate_unit]

                    [object]
                        silent=yes
                        duration=turn end
                        [filter]
                            x,y=$unit_to_cast_on_x, $unit_to_cast_on_y
                        [/filter]
                        [effect]
                            apply_to=new_animation
                            [extra_anim]
                                flag=disattack_anim_defender
                                missile_start_time=-150
                                [missile_frame]
                                    halo="halo/holy/light-beam-[1~7,6~1].png:[30*6,130,70*6]"
                                    offset=0.0
                                    auto_vflip=no
                                [/missile_frame]
                            [/extra_anim]
                        [/effect]
                    [/object]

                    [animate_unit]
                        flag=disattack_anim_defender
                        [filter]
                            x,y=$unit_to_cast_on_x, $unit_to_cast_on_y
                        [/filter]
                        [facing]
                            id=daeola
                        [/facing]
                    [/animate_unit]

                    [harm_unit]
                        [filter]
                            x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                        [/filter]
                        [filter_second]
                            id=daeola
                        [/filter_second]
                        amount=$miss_or_hit_disattack
                        alignment=lawful
                        damage_type=arcane
                        kill=yes
                        experience=kill
                        fire_event=yes
                        animate=defender

                        [primary_attack]
                            range=ranged
                        [/primary_attack]

                        [secondary_attack]
                            range=ranged
                        [/secondary_attack]
                    [/harm_unit]

                    [set_variable]
                        name=repeat_count
                        add=-1
                    [/set_variable]

                    ##{DELAY 500}
                [/do]
            [/while]

            [if]
                [have_unit]
                    x,y= $unit_to_cast_on_x, $unit_to_cast_on_y
                [/have_unit]
                [then]
                    [store_unit]
                        [filter]
                            x,y=$unit_to_cast_on_x,$unit_to_cast_on_y
                        [/filter]
                        variable=unit_to_cast_on
                    [/store_unit]
                    {VARIABLE unit_level $unit_to_cast_on.level}
                    {CLEAR_VARIABLE unit_to_cast_on}
                    [store_unit]
                        [filter]
                            id=daeola
                        [/filter]
                        variable=Daeola_var
                    [/store_unit]
                    {VARIABLE daeola_exp $Daeola_var.experience}
                    {CLEAR_VARIABLE Daeola_var}
                    [modify_unit]
                        [filter]
                            id=daeola
                        [/filter]
                        experience="$($daeola_exp + $unit_level)"
                    [/modify_unit]
                [/then]
            [/if]
        [/event]

        [event]
            name=skill_disattack_d
            first_time_only=no

            {VARIABLE TARGET_IMAGE "misc/attack.png"}

            [lua]
                code= <<
			daeola_ranged_spell(7, wesnoth.get_variable("TARGET_IMAGE"), false, true, 'skill_disattack_d_cast' , 10)

            wesnoth.interface.delay(300)
            wesnoth.select_unit()
	        wesnoth.deselect_hex()
            wesnoth.fire("redraw")
		>>
            [/lua]
        [/event]
#enddef

#define ANIMATIONS_DISATTACK_D PATH
    [animation]
        apply_to=disattack_anim

        start_time=-395
        [frame]
            image="{PATH_D}/daeola.png:75"
        [/frame]
        [frame]
            image="{PATH_D}/daeola.png"
            halo=halo/holy/halo[6,1,3,5,6].png:[75*4,50]
        [/frame]
        {SOUND:HIT_AND_MISS {SOUND_LIST:HOLY} {SOUND_LIST:HOLY_MISS} -75}
        [frame]
            image="{PATH_D}/daeola.png:50"
        [/frame]
    [/animation]
#enddef

#######################################################################################################################################################
#                                                                  "PUBLIC" MACROS
#######################################################################################################################################################
#############################
# RESELECT SKILLS
#############################
#define RESELECT_SKILLS_AFTER_OBJECTIVES_D WML_BEFORE WML_AFTER
    # doing things after showing objectives is hard. This approximates it.
    [listen_for_mousemove]
    [/listen_for_mousemove]
    [event]
        name=mousemove_synced
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=select
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=mousemove,recruit,recall,side 1 turn end
        {WML_BEFORE}
        [select_daeola_skills]
        [/select_daeola_skills]
        {CLEAR_VARIABLE spellcasted_this_turn_d}
        {FIRE_EVENT refresh_daeola_skills}
        {WML_AFTER}
    [/event]
#enddef
#define EVENT_REMOVE_SKILLS_D
    [event]
        name=refresh_daeola_skills
        first_time_only=no
        {REMOVE_OBJECT skill_magic_missile_d   id=daeola}
        {REMOVE_OBJECT skill_levitate_d        id=daeola}
    [/event]
#enddef

#############################
# GLOBAL EVENTS
#############################
#define GLOBAL__SPELLCASTING_EVENTS_D
    {EVENT_REMOVE_SKILLS_D} # create this event first, so we remove and THEN re-add

    {EVENT_MAGIC_MISSILE_D}
    {EVENT_LEVITATE_D}
    {EVENT_SWAP_D}
    {EVENT_DISHEAL_D}
    {EVENT_DISATTACK_D}

    #--------------------
    # CAST SKILL IN A SYNCED CONTEXT
    #--------------------
    # don't do this directly from spellcasting.lua, or we get OOS replays and the player can undo
    [event]
        name=cast_skill_synced_d
        first_time_only=no
        [do_command]
            [fire_event]
                raise=$skill_id
            [/fire_event]
        [/do_command]
        {CLEAR_VARIABLE skill_id}
    [/event]

    #--------------------
    # NEW TURN RESET
    #--------------------
    [event]
        name=new turn
        first_time_only=no
        {CLEAR_VARIABLE spellcasted_this_turn_d} # used by lua
        {CLEAR_VARIABLE disable_xp_message_d}
    [/event]

    #--------------------
    # PREVENT LEVELING
    #--------------------
    [event]
        name=pre advance
        first_time_only=no
        {FILTER id=daeola}
        [modify_unit]
            {FILTER id=daeola}
            experience=$($unit.max_experience-1)
        [/modify_unit]
        [if] {VARIABLE_CONDITIONAL disable_xp_message_d not_equals yes} {THEN([floating_text]
            x,y,text=$unit.x,$unit.y,_"<span color='#a308b8' size='small'>Max XP!</span>"
        [/floating_text])} [/if]
        {VARIABLE disable_xp_message_d yes}
    [/event]
#enddef

#############################
# ANIMATIONS
#############################
#define SPELLCASTING_ANIMATIONS_D PATH
    {ANIMATIONS_MAGIC_MISSILE_D {PATH}}
    {ANIMATIONS_LEVITATE_D {PATH}}
    {ANIMATIONS_DISATTACK_D {PATH}}

    #--------------------
    # DEFAULT ANIMATIONS
    #--------------------

    [leading_anim]
        start_time=-250          {FRAME image={PATH}/daeola.png:500}
        overlay_start_time=-100  {OVERLAY_FRAME halo_x,halo_y,halo=14,-25,halo/misc/leadership-flare-[1~13].png:20}
    [/leading_anim]
    [recruiting_anim]
        start_time=-250          {FRAME image={PATH}/daeola.png:500}
        overlay_start_time=-100  {OVERLAY_FRAME halo_x,halo_y,halo=14,-25,halo/misc/leadership-flare-[1~13].png:20}
    [/recruiting_anim]

    [standing_anim]
        base_score=-1 # avoid using this animation if any others apply
        {FRAME image={PATH}/daeola.png}
    [/standing_anim]
    [movement_anim]
        base_score=-1 # avoid using this animation if any others apply
        {FRAME image={PATH}/daeola.png}
    [/movement_anim]
#enddef

#############################
# UTILITY MACROS
#############################

#define __RENAME_SKILL_VARIABLE_D VAR1_D VAR2_D
    # only rename if the variable exists, or else we get lots of non-null blank variables
    [if] {VARIABLE_CONDITIONAL {VAR1_D} equals yes}
        {THEN(  {VARIABLE {VAR2_D} ${VAR1_D}}  )}
        {ELSE(  {CLEAR_VARIABLE   {VAR2_D}}  )}
    [/if]
    {CLEAR_VARIABLE {VAR1_D}}
#enddef
#define STORE_SKILLS_D
    {__RENAME_SKILL_VARIABLE_D skill_magic_missile_d   old_magic_missile_d  }
    {__RENAME_SKILL_VARIABLE_D skill_levitate_d        old_levitate_d       }
    {__RENAME_SKILL_VARIABLE_D skill_swap_d        old_swap_d       }
    {__RENAME_SKILL_VARIABLE_D skill_disheal_d        old_disheal_d       }
    {__RENAME_SKILL_VARIABLE_D skill_disattack_d        old_disattack_d       }

#enddef
#define UNSTORE_SKILLS_D
    {__RENAME_SKILL_VARIABLE_D old_magic_missile_d   skill_magic_missile_d  }
    {__RENAME_SKILL_VARIABLE_D old_levitate_d        skill_levitate_d       }
    {__RENAME_SKILL_VARIABLE_D old_swap_d        skill_swap_d       }
    {__RENAME_SKILL_VARIABLE_D old_disheal_d     skill_disheal_d       }
    {__RENAME_SKILL_VARIABLE_D old_disattack_d   skill_disattack_d       }
#enddef
