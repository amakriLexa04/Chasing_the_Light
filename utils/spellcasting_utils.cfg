#textdomain wesnoth-ctl

#############################
# RESELECT SKILLS
#############################
#define RESELECT_SKILLS_AFTER_OBJECTIVES CASTER WML_BEFORE WML_AFTER
    # doing things after showing objectives is hard. This approximates it.
    [listen_for_mousemove]
    [/listen_for_mousemove]
    [event]
        name=mousemove_synced
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=select
        [do_command]
            [fire_event]
                raise=mousemove # convert to a synced context
            [/fire_event]
        [/do_command]
    [/event]
    [event]
        name=mousemove,recruit,recall,side 1 turn end
        {WML_BEFORE}
        [select_caster_skills]
		id = {CASTER}
        [/select_caster_skills]
        {CLEAR_VARIABLE ("spellcasted_this_turn_" + {CASTER})}
        {FIRE_EVENT ("refresh_" + {CASTER} + "_skills")}
        {WML_AFTER}
    [/event]
#enddef

#define GLOBAL__SPELLCASTING_EVENTS

    #--------------------
    # NEW TURN RESET
    #--------------------
    [event]
        name=new turn
        first_time_only=no
		[lua]
        code= <<
		    local caster_data = wesnoth.dofile(wml.variables["path_to_casters"])
            local casters = caster_data.casters
	        for k=0,#casters,1 do
                wml.variables["spellcasted_this_turn_" .. casters[k].id] = nil
				wml.variables["disable_xp_message_" .. casters[k].id] = nil
			end
	    >>
	    [/lua]
    [/event]


    #--------------------
    # CAST SKILL IN A SYNCED CONTEXT
    #--------------------
    # don't do this directly from spellcasting.lua, or we get OOS replays and the player can undo
    [event]
        name=cast_skill_synced
        first_time_only=no
        [do_command]
            [fire_event]
                raise=$skill_id
            [/fire_event]
        [/do_command]
        {CLEAR_VARIABLE skill_id}
    [/event]

    #--------------------
    # PREVENT BADLY-TIMED SPELLS
    #--------------------
    [event]
        name=attack
        first_time_only=no
        {VARIABLE is_during_attack yes}
    [/event]
    [event]
        name=attack end
        first_time_only=no
        {CLEAR_VARIABLE is_during_attack}
    [/event]
    [event]
        name=start,side 1 turn end
        first_time_only=no
        {VARIABLE not_player_turn yes}
    [/event]
    [event]
        name=new turn
        first_time_only=no
        {CLEAR_VARIABLE not_player_turn}
    [/event]
	
#enddef