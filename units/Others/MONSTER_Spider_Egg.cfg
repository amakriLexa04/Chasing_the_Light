#textdomain wesnoth-ctl

[unit_type]
    id=Spider Egg
    name= _ "Spiderling Egg"
    race=monster
    image="units/monsters/ant/ant_egg.png"
    profile="portraits/monsters/ant-egg.webp"
    # It should just sit there, but default behaviour kicks in and hflips,
    # so we make the base frame a blank
    [standing_anim]
        start_time=-50
        [frame]
            image="misc/blank-hex.png:50"
        [/frame]
        [egg_frame]
            image="units/monsters/ant/ant_egg.png:50"
            auto_vflip=no
            auto_hflip=no
        [/egg_frame]
    [/standing_anim]
    [defend]
        start_time=-50
        [frame]
            image="misc/blank-hex.png:50"
        [/frame]
        [egg_frame]
            image="units/monsters/ant/ant_egg.png:50"
            auto_vflip=no
            auto_hflip=no
        [/egg_frame]
    [/defend]
    [death]
        start_time=-150
        egg_alpha=1~0:600
        [frame]
            image="misc/blank-hex.png:600"
        [/frame]
        [egg_frame]
            image="units/monsters/ant/ant_egg.png:600"
            auto_vflip=no
            auto_hflip=no
        [/egg_frame]
    [/death]
    [animation]
        apply_to=hatching
        start_time=-250
        egg_x=0~-3:50,-3~3:100,3~-3:100,-3~3:100,3~-3:100,-3~0:50
        [frame]
            image="misc/blank-hex.png:500"
        [/frame]
        [egg_frame]
            image="units/monsters/ant/ant_egg.png:500"
            auto_vflip=no
            auto_hflip=no
        [/egg_frame]
    [/animation]
    hitpoints=20
    movement_type=none
    movement=0
    experience=4
    level=0
    alignment=neutral
    advances_to=Spiderling
    cost=4
    usage=fighter
    description=""
    die_sound=hiss-die.wav
    undead_variation=spider
    [resistance]
        blade=100
        pierce=100
        impact=80
        fire=120
        cold=120
        arcane=90
    [/resistance]
    # eggs hatch when enemy starts turn adjacent
    [event]
        first_time_only=no
        id=ant_egg_hatch_turn
        name=side turn
        [store_unit]
            [filter]
                type=Spiderling,Spider Egg
                side=$side_number
                [filter_adjacent]
                    is_enemy=yes
                [/filter_adjacent]
            [/filter]
            variable=egg_hatch
            kill=no
        [/store_unit]
        [for]
            array=egg_hatch
            [do]
                [animate_unit]
                    flag=hatching
                    [filter]
                        id=$egg_hatch[$i].id
                    [/filter]
                [/animate_unit]
                # value is chosen to give a non-trivial residual XP after advancement
                [set_variable]
                    name=egg_hatch[$i].experience
                    value=5
                [/set_variable]
                [unstore_unit]
                    variable=egg_hatch[$i]
                    find_vacant=no
                    advance=yes
                [/unstore_unit]
            [/do]
        [/for]
        {CLEAR_VARIABLE egg_hatch}
    [/event]
    # eggs hatch when adjacent egg of same team gets broken
    [event]
        first_time_only=no
        id=ant_egg_hatch_die
        name=die
        [filter]
            type=Spider Egg
        [/filter]
        [store_unit]
            [filter]
                type=Spider Egg
                [filter_adjacent]
                    id=$unit.id
                    is_enemy=no
                [/filter_adjacent]
            [/filter]
            variable=egg_hatch
            kill=no
        [/store_unit]
        [for]
            array=egg_hatch
            [do]
                [animate_unit]
                    flag=hatching
                    [filter]
                        id=$egg_hatch[$i].id
                    [/filter]
                [/animate_unit]
                # value is chosen to give a non-trivial residual XP after advancement
                [set_variable]
                    name=egg_hatch[$i].experience
                    value=5
                [/set_variable]
                [unstore_unit]
                    variable=egg_hatch[$i]
                    find_vacant=no
                    advance=yes
                [/unstore_unit]
            [/do]
        [/for]
        {CLEAR_VARIABLE egg_hatch}
    [/event]
[/unit_type]
